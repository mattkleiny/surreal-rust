Issues:
  [ ] Core types need to be thread safe to support hecs and parallel workloads?
  [ ] Consider upgrading to WGPU instead of building custom graphics pipeline?

Core:
  [✔] Get asset management loading working @done(22-06-05 14:12)
  [ ] Get hot reload for assets working
    [ ] Dependent file hot reloads (for shader includes, etc?)
  [✔] Generalized object loading? @done(22-06-05 14:12)
  [ ] Fix virtual file system (registry + more formats)
  [ ] Get top-level crash handler working
  [✔] Allow reads from buffers and textures @done(22-06-05 14:12)
  [ ] Finalize core maths library
  [ ] Add lots of tests
  [✔] Reify Grid and add drawing helpers for common shapes (lines, curves, etc) @done(22-06-05 14:12)
  [✔] Fix up lifetimes for core types (graphics, etc) @done(22-06-05 14:12)
  [ ] Give documentation a bit of love
  [✔] Get egui text input working (and platform output handled) @done(22-06-05 23:46)
  [✔] Swap to stable (instead of nightly)? @done(22-06-10 17:20)
  [ ] Scene management and loading
  [ ] Symmetric matrices for intersection tests, etc?
  [ ] Support for custom allocators? (A frame arena for scratch work, perhaps?)
  [ ] Use static pointers for graphics server, audio server, etc?
  [ ] Add matrix inversion and more core linear algebra or instead use an existing crate
  [ ] Lightweight entity component system?

AI:
  [ ] Basic automata
    [ ] Behaviour trees?
    [ ] Decision trees?
    [ ] State machines?
  [ ] Navigation meshes and path-finding?
  [ ] Dijkstra maps for 2d flow finding?

Graphics:
  [✔] Add bitmap fonts @done(22-06-06 18:57)
  [✔] Add vector fonts @started(22-06-06 19:08) @done(22-06-10 17:19)
  [ ] Improve vector font rendering and caching
  [ ] Get #[derive(Vertex)] working
  [ ] Font layout/galley system
  [ ] Add sprite pivots, transforms, etc
  [ ] Add sprite animations
  [ ] Add tilemap pivots, transforms, etc
  [ ] Add tilemap animations
  [ ] Add texture atlases (automatically baked)?
  [ ] Draw lists? (load/store actions, render targets, command buffer and post processing)
  [ ] Sprite transforms for rotations/shear/etc
  [✔] Sprite batching that supports multiple textures per draw call @done(22-06-09 19:58)
  [✔] Fix sprite batching when there are implicit textures in a material (i.e. slots are relative to material) @done(22-06-13 22:08)
  [ ] Swap to WGPU and consider implementing a resource abstraction system (ala jdh)

Audio:
  [ ] Get audio backend playing simple buffered sounds
  [ ] Support buffered audio
  [ ] Support streaming audio

Scripting:
  [ ] Finish Lox implementation and basic virtual machine
  [ ] Add Lisp implementation and virtual machine
  [ ] Add BASIC implementation and virtual machine, and lots of common operations
  [ ] Consider other languages and ideas

Editor:
  [ ] Tauri-based editor with web frontend technologies
  [ ] How to integrate render target output from UI into Tauri/Canvas?
  [ ] Integrate the editor into VSCode and use it to provide basic scene editing/etc?
    [ ] Define the scene file format, and other data structures as well?
    [ ] Consider visual graph models for state machines, behaviour trees, etc
    [ ] Consider visual timeline editor for sprite animatinos and events?
  [ ] Graph editor for VS Code symlinked into the project folder?

User Interface:
  [ ] `egui` based UI Rust framework?
    [ ] `rsx` style markup for egui function invocations.
    [ ] `redux` style state management in a central store
